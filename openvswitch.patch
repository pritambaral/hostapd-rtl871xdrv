diff -wbBur hostapd-2.8.q/src/drivers/drivers.mak hostapd-2.8/src/drivers/drivers.mak
--- hostapd-2.8.q/src/drivers/drivers.mak	2019-04-21 10:10:22.000000000 +0300
+++ hostapd-2.8/src/drivers/drivers.mak	2019-04-25 15:05:36.981411804 +0300
@@ -136,6 +136,10 @@
 NEED_RFKILL=y
 endif
 
+ifdef CONFIG_OPENVSWITCH
+DRV_CFLAGS += -DCONFIG_OPENVSWITCH
+endif
+
 ifdef NEED_NETLINK
 DRV_OBJS += ../src/drivers/netlink.o
 endif
diff -wbBur hostapd-2.8.q/src/drivers/drivers.mk hostapd-2.8/src/drivers/drivers.mk
--- hostapd-2.8.q/src/drivers/drivers.mk	2019-04-21 10:10:22.000000000 +0300
+++ hostapd-2.8/src/drivers/drivers.mk	2019-04-25 15:05:36.981411804 +0300
@@ -128,6 +128,10 @@
 NEED_RFKILL=y
 endif
 
+ifdef CONFIG_OPENVSWITCH
+DRV_CFLAGS += -DCONFIG_OPENVSWITCH
+endif
+
 ifdef NEED_NETLINK
 DRV_OBJS += src/drivers/netlink.c
 endif
diff -wbBur hostapd-2.8.q/src/drivers/linux_ioctl.c hostapd-2.8/src/drivers/linux_ioctl.c
--- hostapd-2.8.q/src/drivers/linux_ioctl.c	2019-04-21 10:10:22.000000000 +0300
+++ hostapd-2.8/src/drivers/linux_ioctl.c	2019-04-25 15:05:36.981411804 +0300
@@ -15,6 +15,69 @@
 #include "common/linux_bridge.h"
 #include "linux_ioctl.h"
 
+#ifdef CONFIG_OPENVSWITCH
+#include <sys/wait.h>
+#include <sys/stat.h>
+
+#define run_prog(p, ...) ({ \
+	struct stat q; \
+	int rc = -1, status; \
+	if(stat(p, &q) == 0) \
+	{ \
+		pid_t pid = fork(); \
+		if (!pid) \
+			exit(execl(p, p, ##__VA_ARGS__, NULL)); \
+		if (pid < 0) { \
+			rc = -1; \
+		} else { \
+			while ((rc = waitpid(pid, &status, 0)) == -1 && errno == EINTR); \
+			rc = (rc == pid && WIFEXITED(status)) ? WEXITSTATUS(status) : -1; \
+		} \
+	} \
+	rc; \
+})
+
+int ovs_br_get(char *brname, const char *ifname)
+{
+	FILE *f;
+	char cmd[64];
+	char *c;
+	struct stat q;
+
+	if(stat("/usr/bin/ovs-vsctl", &q) != 0)
+		return -1;
+
+	brname[0] = '\0';
+	sprintf(cmd, "/usr/bin/ovs-vsctl iface-to-br %s", ifname);
+	f = popen(cmd, "r");
+	if (!f)
+		return -1;
+	c = fgets(brname, IFNAMSIZ, f);
+	pclose(f);
+	if (c && strlen(brname)) {
+		/* Ignore newline */
+		if ((c = strchr(brname, '\n')))
+			*c = '\0';
+		return 0;
+	}
+	return -1;
+}
+
+int ovs_br_add_if(const char *brname, const char *ifname)
+{
+	if (run_prog("/usr/bin/ovs-vsctl", "add-port", brname, ifname))
+		return -1;
+	return 0;
+}
+
+int ovs_br_del_if(const char *brname, const char *ifname)
+{
+	if (run_prog("/usr/bin/ovs-vsctl", "del-port", brname, ifname))
+		return -1;
+	return 0;
+}
+
+#endif
 
 int linux_set_iface_flags(int sock, const char *ifname, int dev_up)
 {
@@ -152,6 +215,11 @@
 	struct ifreq ifr;
 	int ifindex;
 
+#ifdef CONFIG_OPENVSWITCH
+	if (!ovs_br_add_if(brname, ifname))
+		return 0;
+#endif
+
 	ifindex = if_nametoindex(ifname);
 	if (ifindex == 0)
 		return -1;
@@ -177,6 +245,11 @@
 	struct ifreq ifr;
 	int ifindex;
 
+#ifdef CONFIG_OPENVSWITCH
+	if (!ovs_br_del_if(brname, ifname))
+		return 0;
+#endif
+
 	ifindex = if_nametoindex(ifname);
 	if (ifindex == 0)
 		return -1;
@@ -199,6 +272,11 @@
 	char path[128], brlink[128], *pos;
 	ssize_t res;
 
+#ifdef CONFIG_OPENVSWITCH
+	if (!ovs_br_get(brname, ifname))
+		return 0;
+#endif
+
 	os_snprintf(path, sizeof(path), "/sys/class/net/%s/brport/bridge",
 		    ifname);
 	res = readlink(path, brlink, sizeof(brlink));
